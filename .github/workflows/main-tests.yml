name: Main tests

on:
  merge_group:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

## `actions-rs/toolchain@v1` overwrite set to false so that
## `rust-toolchain` is always used and the only source of truth.

jobs:
  skip_check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
          paths_ignore: '["**/README.md"]'

  lighttest:
    needs: [skip_check]
    if: |
      github.event.pull_request.draft == false &&
      (github.event.action == 'ready_for_review' || needs.skip_check.outputs.should_skip != 'true')

    name: Light unit tests
    runs-on: ["${{github.run_id}}", self-hosted, c5.9xlarge]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version: ~1.19
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run light tests # light tests are run in parallel
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --all --all-features --exclude integration-tests --exclude circuit-benchmarks
      - name: Run testool internal tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --manifest-path testool/Cargo.toml

  heavytests:
    needs: [skip_check]
    if: |
      github.event.pull_request.draft == false &&
      (github.event.action == 'ready_for_review' || needs.skip_check.outputs.should_skip != 'true')

    name: Heavy unit tests
    runs-on: ["${{github.run_id}}", self-hosted, c5.9xlarge]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Setup golang
        uses: actions/setup-go@v3
        with:
          go-version: ~1.19
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run heavy tests # heavy tests are run serially to avoid OOM
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --all --all-features --exclude integration-tests --exclude circuit-benchmarks serial_ -- --ignored --test-threads 1

  build:
    needs: [skip_check]
    if: |
      github.event.pull_request.draft == false &&
      (github.event.action == 'ready_for_review' || needs.skip_check.outputs.should_skip != 'true')

    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: false
      - name: Add target
        run: rustup target add x86_64-unknown-linux-gnu
      # Go cache for building geth-utils
      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: build-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features
